
(:FILE "/Users/binghe/Lisp/cl-net-snmp/snmp/trunk/asn1/asn1.zb" :NAME "ASN.1" :DOMAIN-FILE "snmp:asn1;asn1-domain.lisp" :PACKAGE "SNMP" :GRAMMAR "zebu-mg" :IDENTIFIER-START-CHARS "abcdefghijklmnopqrstuvwxyz" :IDENTIFIER-CONTINUE-CHARS "-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890" :CASE-SENSITIVE T :LEX-CATS ((TYPE-REFERENCE "[A-Z][a-zA-Z0-9-]*") (SIGNED-NUMBER "-?[0-9]+") (ANYTHING "[^ ]+") (HSTRING "'[0-9a-fA-F]*'[hH]")) :DOMAIN (KB-DOMAIN :SUBTYPE (OBJ-ID-COMPONENT :SLOTS (NAME VALUE)) :SUBTYPE (OBJECT-IDENTIFIER-VALUE :SLOTS (VALUE)) :SUBTYPE (VALUE-ASSIGNMENT :SLOTS (NAME TYPE VALUE)) :SUBTYPE (ASSIGNMENT :SLOTS (TYPE VALUE)) :SUBTYPE (SYMBOLS-FROM-MODULE :SLOTS (SYMBOLS GLOBAL-MODULE-REFERENCE)) :SUBTYPE (IMPORTS :SLOTS ((LIST KB-SEQUENCE) VALID)) :SUBTYPE (EXPORTS :SLOTS ((LIST KB-SEQUENCE) ALL-EXPORTS)) :SUBTYPE (MODULE-BODY :SLOTS (EXPORTS IMPORTS (ASSIGNMENT-LIST KB-SEQUENCE))) :SUBTYPE (MODULE-DEFINITION :SLOTS (IDENTIFIER BODY))) :DOMAIN-FILE "SNMP:ASN1;ASN1-DOMAIN.LISP.NEWEST")
#173(ZEBU::THE-EMPTY-STRING ZEBU::AUGMENTED-START ZEBU::THE-END-G-SYMBOL MODULE-DEFINITION MODULE-IDENTIFIER "DEFINITIONS" "::=" "BEGIN" MODULE-BODY "END" MODULE-REFERENCE TYPE-REFERENCE EXPORTS IMPORTS ASSIGNMENT* "EXPORTS" SYMBOL*\,1$ ";" "ALL" SYMBOL REFERENCE "IMPORTS" SYMBOLS-FROM-MODULE* SYMBOLS-FROM-MODULE SYMBOL+\,1$ "FROM" GLOBAL-MODULE-REFERENCE IDENTIFIER ASSIGNMENT TYPE-ASSIGNMENT VALUE-ASSIGNMENT TYPE "MACRO" GARBAGE+ GARBAGE ANYTHING VALUE "OBJECT-IDENTITY" "STATUS" STATUS "DESCRIPTION" DESCRIPTION OBJECT-IDENTITY-REFERENCE OBJECT-IDENTIFIER-VALUE "MODULE-IDENTITY" "LAST-UPDATED" LAST-UPDATED "ORGANIZATION" ORGANIZATION "CONTACT-INFO" CONTACT-INFO MODULE-REVISION* "OBJECT-TYPE" "SYNTAX" OBJECT-TYPE-UNITS OBJECT-TYPE-ACCESS OBJECT-TYPE-INDEX OBJECT-TYPE-AUGMENTS OBJECT-TYPE-REFERENCE OBJECT-TYPE-DEFVAL "NOTIFICATION-TYPE" NOTIFICATION-TYPE-OBJECTS "NOTIFICATION-GROUP" "NOTIFICATIONS" "{" IDENTIFIER+\,1$ "}" "MODULE-COMPLIANCE" MODULE-COMPLIANCE-BODY+ "OBJECT-GROUP" "OBJECTS" STRING MODULE-REVISION "REVISION" "REFERENCE" "INDEX" OBJECT-TYPE-INDEX-VALUE+\,1$ OBJECT-TYPE-INDEX-VALUE "IMPLIED" "AUGMENTS" "DEFVAL" OBJECT-TYPE-DEFVAL-VALUE HSTRING OBJ-ID-COMPONENT IDENTIFIER*\,1$ "UNITS" "MAX-ACCESS" "ACCESS" MODULE-COMPLIANCE-BODY MODULE-COMPLIANCE-LOCAL MODULE-COMPLIANCE-OTHER "MODULE" MODULE-COMPLIANCE-MANDATORY MODULE-COMPLIANCE-ITEM* "MANDATORY-GROUPS" MODULE-COMPLIANCE-ITEM MODULE-COMPLIANCE-GROUP MODULE-COMPLIANCE-OBJECT "GROUP" "OBJECT" MODULE-COMPLIANCE-OBJECT-SYNTAX MODULE-COMPLIANCE-OBJECT-WRITE-SYNTAX MODULE-COMPLIANCE-OBJECT-ACCESS "WRITE-SYNTAX" "MIN-ACCESS" BUILTIN-TYPE NAMED-TYPE OBJECT-IDENTIFIER-TYPE CHOICE-TYPE STRING-TYPE INTEGER-TYPE SEQUENCE-OF-TYPE SEQUENCE-TYPE TEXTUAL-CONVENTION-TYPE TAGGED-TYPE "TEXTUAL-CONVENTION" TEXTUAL-CONVENTION-DISPLAY-HINT TEXTUAL-CONVENTION-REFERENCE "DISPLAY-HINT" "IDENTIFIER" BUILTIN-VALUE OBJ-ID-COMPONENT+ NAME-AND-NUMBER-FORM NAME-FORM NUMBER-FORM "(" ")" NUMBER "CHOICE" STRING-TYPE-NAME STRING-OPTIONS "OCTET" "STRING" "DisplayString" "PhysAddress" "SnmpAdminString" "DateAndTime" "InternationalDisplayString" "Opaque" "SIZE" NUMBERS+\|1$ NUMBERS COMMON-NUMBER ".." INTEGER-TYPE-NAME SPLITED-NUMBERS+\|1$ NAMED-NUMBER+\,1$ "INTEGER" "Integer32" "Unsigned32" "RowStatus" "SnmpSecurityModel" "BITS" SPLITED-NUMBERS NAMED-NUMBER SIGNED-NUMBER "SEQUENCE" GARBAGE* "OF" TAG "IMPLICIT" "EXPLICIT" "[" CLASS CLASS-NUMBER "]" "UNIVERSAL" "APPLICATION" "PRIVATE" "," "|" |Rest-IDENTIFIER*,1$| |Rest-SYMBOL*,1$| )


#82(5 6 7 9 11 15 17 18 21 25 27 32 35 37 38 40 44 45 47 49 52 53 60 62 63 64 66 67 69 70 71 73 74 75 78 79 80 82 85 86 87 91 94 98 99 103 104 115 118 119 125 126 127 128 131 132 133 134 135 136 137 138 139 143 147 148 149 150 151 152 155 156 158 160 161 162 165 166 167 168 169 170 )

#173((1 . 1)(3 . 6)(4 . 1)(10 . 1)(8 . 3)(8 . 0)(12 . 3)(12 . 3)(12 . 0)(19 . 1)(13 . 3)(13 . 0)(23 . 3)(26 . 1)(20 . 1)(20 . 1)(28 . 1)(28 . 1)(29 . 3)(29 . 6)(34 . 1)(30 . 4)(30 . 9)(30 . 13)(30 . 16)(30 . 9)(30 . 12)(30 . 9)(30 . 12)(39 . 1)(41 . 1)(46 . 1)(48 . 1)(50 . 1)(72 . 4)(42 . 2)(42 . 0)(56 . 4)(56 . 0)(77 . 2)(77 . 1)(57 . 4)(57 . 0)(59 . 4)(59 . 0)(81 . 1)(81 . 1)(81 . 1)(81 . 3)(54 . 2)(54 . 0)(58 . 2)(58 . 0)(55 . 2)(55 . 2)(88 . 1)(88 . 1)(89 . 3)(92 . 4)(92 . 0)(95 . 1)(95 . 1)(90 . 7)(96 . 4)(97 . 7)(100 . 2)(100 . 0)(101 . 2)(101 . 0)(102 . 2)(102 . 0)(61 . 4)(61 . 0)(31 . 1)(31 . 1)(105 . 1)(105 . 1)(105 . 1)(105 . 1)(105 . 1)(105 . 1)(105 . 1)(105 . 1)(106 . 1)(113 . 9)(116 . 2)(116 . 0)(117 . 2)(117 . 0)(107 . 2)(36 . 1)(120 . 1)(43 . 3)(83 . 1)(83 . 1)(83 . 1)(122 . 4)(123 . 1)(124 . 1)(108 . 4)(109 . 2)(129 . 2)(129 . 1)(129 . 1)(129 . 1)(129 . 1)(129 . 1)(129 . 1)(130 . 6)(130 . 0)(141 . 3)(141 . 1)(110 . 4)(110 . 4)(110 . 1)(144 . 1)(144 . 1)(144 . 1)(144 . 1)(144 . 1)(144 . 1)(153 . 1)(153 . 3)(154 . 4)(142 . 1)(142 . 1)(112 . 4)(111 . 3)(114 . 2)(114 . 3)(114 . 3)(159 . 4)(164 . 1)(163 . 1)(163 . 1)(163 . 1)(163 . 0)(157 . 0)(157 . 2)(146 . 1)(146 . 3)(145 . 1)(145 . 3)(140 . 1)(140 . 3)(121 . 1)(121 . 2)(93 . 0)(93 . 2)(171 . 0)(171 . 3)(84 . 0)(84 . 2)(76 . 1)(76 . 3)(68 . 1)(68 . 2)(65 . 1)(65 . 3)(51 . 0)(51 . 2)(33 . 1)(33 . 2)(24 . 1)(24 . 3)(22 . 0)(22 . 2)(172 . 0)(172 . 3)(16 . 0)(16 . 2)(14 . 0)(14 . 2))

#342(
((11 :S 9))
((2 :A 0))
((5 :S 3))
((6 :S 4))
((7 :S 5))
((9 :R 5) (11 :R 8) (15 :S 323) (21 :R 8) (27 :R 8))
((9 :S 7))
((2 :R 1))
((5 :R 2))
((5 :R 3) (11 :R 3) (17 :R 3) (27 :R 3))
((9 :R 11) (11 :R 11) (21 :S 18) (27 :R 11))
((9 :R 171) (11 :S 324) (27 :S 341))
((9 :R 4))
((17 :S 14))
((9 :R 6) (11 :R 6) (21 :R 6) (27 :R 6))
((17 :S 16))
((9 :R 7) (11 :R 7) (21 :R 7) (27 :R 7))
((17 :R 9) (25 :R 9) (169 :R 9))
((11 :S 25) (17 :R 165) (27 :S 26))
((17 :S 20))
((9 :R 10) (11 :R 10) (27 :R 10))
((25 :S 22))
((11 :S 9))
((11 :R 12) (17 :R 12) (27 :R 12))
((11 :R 13) (17 :R 13) (27 :R 13))
((17 :R 14) (25 :R 14) (169 :R 14))
((17 :R 15) (25 :R 15) (169 :R 15))
((9 :R 16) (11 :R 16) (27 :R 16))
((9 :R 17) (11 :R 17) (27 :R 17))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((9 :R 18) (11 :R 18) (27 :R 18))
((6 :S 32))
((7 :S 33))
((35 :S 36))
((9 :S 35))
((9 :R 19) (11 :R 19) (27 :R 19))
((9 :R 20) (35 :R 20) (66 :R 20))
((6 :S 38))
((64 :S 218))
((9 :R 21) (11 :R 21) (27 :R 21))
((38 :S 41))
((27 :S 113))
((40 :S 43))
((71 :S 114))
((6 :R 36) (74 :S 122))
((6 :S 46))
((64 :S 218))
((9 :R 22) (11 :R 22) (27 :R 22))
((45 :S 49))
((71 :S 115))
((47 :S 51))
((71 :S 116))
((49 :S 53))
((71 :S 117))
((40 :S 55))
((71 :S 114))
((6 :R 159) (73 :S 118))
((6 :S 58))
((64 :S 218))
((9 :R 23) (11 :R 23) (27 :R 23))
((53 :S 61))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((85 :S 145) (86 :R 50) (87 :R 50))
((86 :S 149) (87 :S 151))
((38 :S 65))
((27 :S 113))
((40 :S 67))
((71 :S 114))
((6 :R 38) (74 :R 38) (75 :S 124) (79 :R 38) (80 :R 38))
((6 :R 42) (74 :R 42) (79 :S 131) (80 :R 42))
((6 :R 52) (74 :S 147) (80 :R 52))
((6 :R 44) (80 :S 135))
((6 :S 73))
((64 :S 218))
((9 :R 24) (11 :R 24) (27 :R 24))
((38 :R 72) (70 :S 186))
((38 :S 77))
((27 :S 113))
((40 :S 79))
((71 :S 114))
((6 :S 81))
((64 :S 218))
((9 :R 25) (11 :R 25) (27 :R 25))
((63 :S 84))
((64 :S 85))
((27 :S 336))
((66 :S 87))
((38 :S 88))
((27 :S 113))
((40 :S 90))
((71 :S 114))
((6 :S 92))
((64 :S 218))
((9 :R 26) (11 :R 26) (27 :R 26))
((38 :S 95))
((27 :S 113))
((40 :S 97))
((71 :S 114))
((91 :S 325))
((6 :S 100))
((64 :S 218))
((9 :R 27) (11 :R 27) (27 :R 27))
((70 :S 103))
((64 :S 104))
((27 :S 336))
((66 :S 106))
((38 :S 107))
((27 :S 113))
((40 :S 109))
((71 :S 114))
((6 :S 111))
((64 :S 218))
((9 :R 28) (11 :R 28) (27 :R 28))
((40 :R 29))
((6 :R 30) (73 :R 30) (74 :R 30) (75 :R 30) (79 :R 30) (80 :R 30) (91 :R 30) (98 :R 30) (99 :R 30))
((47 :R 31))
((49 :R 32))
((40 :R 33))
((71 :S 119))
((40 :S 120))
((71 :S 121))
((6 :R 34) (73 :R 34))
((71 :S 123))
((6 :R 35))
((64 :S 125))
((27 :S 130) (78 :S 128))
((66 :S 127))
((6 :R 37) (74 :R 37) (79 :R 37) (80 :R 37))
((27 :S 129))
((66 :R 39) (169 :R 39))
((66 :R 40) (169 :R 40))
((64 :S 132))
((27 :S 133))
((66 :S 134))
((6 :R 41) (74 :R 41) (80 :R 41))
((64 :S 136))
((27 :S 326) (64 :S 142) (71 :S 139) (82 :S 140) (127 :S 227))
((66 :S 138))
((6 :R 43))
((66 :R 45))
((66 :R 46))
((66 :R 47))
((27 :S 302) (66 :R 151))
((66 :S 144))
((66 :R 48))
((71 :S 146))
((86 :R 49) (87 :R 49))
((71 :S 148))
((6 :R 51) (80 :R 51))
((27 :S 150))
((38 :R 53))
((27 :S 152))
((38 :R 54))
((6 :R 55) (91 :R 55))
((6 :R 56) (91 :R 56))
((6 :R 147) (91 :R 147) (98 :S 169) (99 :S 173))
((6 :R 57) (91 :R 57))
((64 :S 158))
((27 :S 336))
((66 :S 160))
((6 :R 58) (91 :R 58) (98 :R 58) (99 :R 58))
((6 :R 60) (91 :R 60) (98 :R 60) (99 :R 60))
((6 :R 61) (91 :R 61) (98 :R 61) (99 :R 61))
((94 :S 164))
((64 :S 165))
((27 :S 336))
((66 :S 167))
((6 :R 147) (91 :R 147) (98 :S 169) (99 :S 173))
((6 :R 62) (91 :R 62))
((27 :S 170))
((40 :S 171))
((71 :S 114))
((6 :R 63) (91 :R 63) (98 :R 63) (99 :R 63))
((27 :S 174))
((40 :R 66) (53 :S 180) (103 :R 66) (104 :R 66))
((40 :R 68) (103 :S 182) (104 :R 68))
((40 :R 70) (104 :S 184))
((40 :S 178))
((71 :S 114))
((6 :R 64) (91 :R 64) (98 :R 64) (99 :R 64))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((40 :R 65) (103 :R 65) (104 :R 65))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((40 :R 67) (104 :R 67))
((27 :S 185))
((40 :R 69))
((64 :S 187))
((27 :S 336))
((66 :S 189))
((38 :R 71))
((6 :R 73) (9 :R 73) (11 :R 73) (27 :R 73) (40 :R 73) (85 :R 73) (86 :R 73) (87 :R 73) (103 :R 73) (104 :R 73))
((6 :R 74) (9 :R 74) (11 :R 74) (27 :R 74) (40 :R 74) (85 :R 74) (86 :R 74) (87 :R 74) (103 :R 74) (104 :R 74))
((6 :R 75) (9 :R 75) (11 :R 75) (27 :R 75) (40 :R 75) (85 :R 75) (86 :R 75) (87 :R 75) (103 :R 75) (104 :R 75))
((6 :R 76) (9 :R 76) (11 :R 76) (27 :R 76) (40 :R 76) (85 :R 76) (86 :R 76) (87 :R 76) (103 :R 76) (104 :R 76))
((6 :R 77) (9 :R 77) (11 :R 77) (27 :R 77) (40 :R 77) (85 :R 77) (86 :R 77) (87 :R 77) (103 :R 77) (104 :R 77))
((6 :R 78) (9 :R 78) (11 :R 78) (27 :R 78) (40 :R 78) (85 :R 78) (86 :R 78) (87 :R 78) (103 :R 78) (104 :R 78))
((6 :R 79) (9 :R 79) (11 :R 79) (27 :R 79) (40 :R 79) (85 :R 79) (86 :R 79) (87 :R 79) (103 :R 79) (104 :R 79))
((6 :R 80) (9 :R 80) (11 :R 80) (27 :R 80) (40 :R 80) (85 :R 80) (86 :R 80) (87 :R 80) (103 :R 80) (104 :R 80))
((6 :R 81) (9 :R 81) (11 :R 81) (27 :R 81) (40 :R 81) (85 :R 81) (86 :R 81) (87 :R 81) (103 :R 81) (104 :R 81))
((6 :R 82) (9 :R 82) (11 :R 82) (27 :R 82) (40 :R 82) (85 :R 82) (86 :R 82) (87 :R 82) (103 :R 82) (104 :R 82))
((6 :R 83) (9 :R 83) (11 :R 83) (27 :R 83) (40 :R 83) (85 :R 83) (86 :R 83) (87 :R 83) (103 :R 83) (104 :R 83))
((38 :R 86) (118 :S 210))
((38 :S 203))
((27 :S 204))
((40 :S 205))
((71 :S 206))
((53 :R 88) (74 :S 212))
((53 :S 208))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((6 :R 84) (9 :R 84) (11 :R 84) (27 :R 84) (40 :R 84) (85 :R 84) (86 :R 84) (87 :R 84) (103 :R 84) (104 :R 84))
((71 :S 211))
((38 :R 85))
((71 :S 213))
((53 :R 87))
((119 :S 215))
((6 :R 89) (9 :R 89) (11 :R 89) (27 :R 89) (40 :R 89) (85 :R 89) (86 :R 89) (87 :R 89) (103 :R 89) (104 :R 89))
((9 :R 90) (11 :R 90) (27 :R 90))
((9 :R 91) (11 :R 91) (27 :R 91))
((27 :S 326) (127 :S 227))
((66 :S 220))
((9 :R 92) (11 :R 92) (27 :R 92))
((27 :R 93) (66 :R 93) (127 :R 93))
((27 :R 94) (66 :R 94) (127 :R 94))
((27 :R 95) (66 :R 95) (127 :R 95))
((127 :S 227))
((126 :S 226))
((27 :R 96) (66 :R 96) (127 :R 96))
((27 :R 98) (66 :R 98) (126 :R 98) (127 :R 98))
((64 :S 229))
((35 :S 36))
((66 :S 231))
((6 :R 99) (9 :R 99) (11 :R 99) (27 :R 99) (40 :R 99) (85 :R 99) (86 :R 99) (87 :R 99) (103 :R 99) (104 :R 99))
((6 :R 109) (9 :R 109) (11 :R 109) (27 :R 109) (40 :R 109) (85 :R 109) (86 :R 109) (87 :R 109) (103 :R 109) (104 :R 109) (125 :S 242))
((6 :R 100) (9 :R 100) (11 :R 100) (27 :R 100) (40 :R 100) (85 :R 100) (86 :R 100) (87 :R 100) (103 :R 100) (104 :R 100))
((132 :S 235))
((6 :R 101) (9 :R 101) (11 :R 101) (27 :R 101) (40 :R 101) (85 :R 101) (86 :R 101) (87 :R 101) (103 :R 101) (104 :R 101) (125 :R 101))
((6 :R 102) (9 :R 102) (11 :R 102) (27 :R 102) (40 :R 102) (85 :R 102) (86 :R 102) (87 :R 102) (103 :R 102) (104 :R 102) (125 :R 102))
((6 :R 103) (9 :R 103) (11 :R 103) (27 :R 103) (40 :R 103) (85 :R 103) (86 :R 103) (87 :R 103) (103 :R 103) (104 :R 103) (125 :R 103))
((6 :R 104) (9 :R 104) (11 :R 104) (27 :R 104) (40 :R 104) (85 :R 104) (86 :R 104) (87 :R 104) (103 :R 104) (104 :R 104) (125 :R 104))
((6 :R 105) (9 :R 105) (11 :R 105) (27 :R 105) (40 :R 105) (85 :R 105) (86 :R 105) (87 :R 105) (103 :R 105) (104 :R 105) (125 :R 105))
((6 :R 106) (9 :R 106) (11 :R 106) (27 :R 106) (40 :R 106) (85 :R 106) (86 :R 106) (87 :R 106) (103 :R 106) (104 :R 106) (125 :R 106))
((6 :R 107) (9 :R 107) (11 :R 107) (27 :R 107) (40 :R 107) (85 :R 107) (86 :R 107) (87 :R 107) (103 :R 107) (104 :R 107) (125 :R 107))
((139 :S 243))
((125 :S 244))
((82 :S 269) (155 :S 268))
((126 :S 246))
((126 :S 247))
((6 :R 108) (9 :R 108) (11 :R 108) (27 :R 108) (40 :R 108) (85 :R 108) (86 :R 108) (87 :R 108) (103 :R 108) (104 :R 108))
((82 :S 269) (155 :S 268))
((126 :R 110) (170 :R 110))
((82 :S 269) (155 :S 268))
((126 :S 252))
((6 :R 112) (9 :R 112) (11 :R 112) (27 :R 112) (40 :R 112) (85 :R 112) (86 :R 112) (87 :R 112) (103 :R 112) (104 :R 112))
((27 :S 264))
((66 :S 255))
((6 :R 113) (9 :R 113) (11 :R 113) (27 :R 113) (40 :R 113) (85 :R 113) (86 :R 113) (87 :R 113) (103 :R 113) (104 :R 113))
((6 :R 115) (9 :R 115) (11 :R 115) (27 :R 115) (40 :R 115) (64 :R 115) (85 :R 115) (86 :R 115) (87 :R 115) (103 :R 115) (104 :R 115) (125 :R 115))
((6 :R 116) (9 :R 116) (11 :R 116) (27 :R 116) (40 :R 116) (64 :R 116) (85 :R 116) (86 :R 116) (87 :R 116) (103 :R 116) (104 :R 116) (125 :R 116))
((6 :R 117) (9 :R 117) (11 :R 117) (27 :R 117) (40 :R 117) (64 :R 117) (85 :R 117) (86 :R 117) (87 :R 117) (103 :R 117) (104 :R 117) (125 :R 117))
((6 :R 118) (9 :R 118) (11 :R 118) (27 :R 118) (40 :R 118) (64 :R 118) (85 :R 118) (86 :R 118) (87 :R 118) (103 :R 118) (104 :R 118) (125 :R 118))
((6 :R 119) (9 :R 119) (11 :R 119) (27 :R 119) (40 :R 119) (64 :R 119) (85 :R 119) (86 :R 119) (87 :R 119) (103 :R 119) (104 :R 119) (125 :R 119))
((6 :R 120) (9 :R 120) (11 :R 120) (27 :R 120) (40 :R 120) (64 :R 120) (85 :R 120) (86 :R 120) (87 :R 120) (103 :R 120) (104 :R 120) (125 :R 120))
((82 :S 269) (155 :S 268))
((126 :R 122) (170 :R 122))
((125 :S 265))
((82 :S 269) (155 :S 268))
((126 :S 267))
((66 :R 123) (169 :R 123))
((126 :R 124) (143 :R 124) (170 :R 124))
((126 :R 125) (143 :R 125) (170 :R 125))
((35 :S 36) (66 :R 137))
((66 :S 272))
((6 :R 126) (9 :R 126) (11 :R 126) (27 :R 126) (40 :R 126) (85 :R 126) (86 :R 126) (87 :R 126) (103 :R 126) (104 :R 126))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((6 :R 127) (9 :R 127) (11 :R 127) (27 :R 127) (40 :R 127) (85 :R 127) (86 :R 127) (87 :R 127) (103 :R 127) (104 :R 127))
((6 :R 128) (9 :R 128) (11 :R 128) (27 :R 128) (40 :R 128) (85 :R 128) (86 :R 128) (87 :R 128) (103 :R 128) (104 :R 128))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((6 :R 129) (9 :R 129) (11 :R 129) (27 :R 129) (40 :R 129) (85 :R 129) (86 :R 129) (87 :R 129) (103 :R 129) (104 :R 129))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280))
((6 :R 130) (9 :R 130) (11 :R 130) (27 :R 130) (40 :R 130) (85 :R 130) (86 :R 130) (87 :R 130) (103 :R 130) (104 :R 130))
((155 :R 136) (166 :S 285) (167 :S 286) (168 :S 287))
((155 :S 284))
((165 :S 283))
((11 :R 131) (99 :R 131) (115 :R 131) (128 :R 131) (131 :R 131) (133 :R 131) (134 :R 131) (135 :R 131) (136 :R 131) (137 :R 131) (138 :R 131) (147 :R 131) (148 :R 131) (149 :R 131) (150 :R 131) (151 :R 131) (152 :R 131) (156 :R 131) (160 :R 131) (161 :R 131) (162 :R 131))
((165 :R 132))
((155 :R 133))
((155 :R 134))
((155 :R 135))
((35 :S 36) (66 :R 137))
((66 :R 138))
((27 :S 264))
((66 :R 140))
((82 :S 269) (155 :S 268))
((126 :R 142))
((82 :S 269) (155 :S 268))
((126 :R 144))
((66 :R 146))
((6 :R 147) (91 :R 147) (98 :S 169) (99 :S 173))
((6 :R 148) (91 :R 148))
((27 :S 300))
((66 :R 149) (169 :S 299))
((66 :R 150))
((66 :R 149) (169 :S 299))
((66 :R 152))
((27 :S 130) (78 :S 128))
((66 :R 154))
((6 :R 156))
((27 :S 336))
((66 :R 158))
((6 :R 159) (73 :S 118))
((6 :R 160))
((9 :R 162) (66 :R 162))
((11 :S 25) (27 :S 26))
((25 :R 164))
((11 :S 25) (17 :R 165) (27 :S 26))
((17 :R 166))
((11 :S 25) (27 :S 26))
((17 :R 167) (169 :S 316))
((17 :R 168))
((17 :R 167) (169 :S 316))
((17 :R 170))
((9 :R 171) (11 :S 324) (27 :S 341))
((9 :R 172))
((11 :S 25) (17 :R 169) (18 :S 15) (27 :S 26))
((6 :S 29) (32 :S 31))
((6 :R 59) (11 :S 163) (91 :R 59) (94 :S 157) (98 :R 59) (99 :R 59))
((27 :R 97) (66 :R 97) (125 :S 224) (127 :R 97))
((126 :R 111) (143 :S 248) (170 :R 111))
((126 :R 121) (143 :S 262) (170 :R 121))
((64 :S 270) (158 :S 273))
((66 :R 139) (169 :S 290))
((126 :R 141) (170 :S 292))
((126 :R 143) (170 :S 294))
((27 :S 326) (66 :R 145) (127 :S 227))
((66 :R 153) (169 :S 304))
((6 :R 155) (91 :S 325))
((66 :R 157) (169 :S 307))
((9 :R 161) (35 :S 36) (66 :R 161))
((25 :R 163) (169 :S 312))
((6 :R 114) (9 :R 114) (11 :R 114) (27 :R 114) (40 :R 114) (64 :S 253) (85 :R 114) (86 :R 114) (87 :R 114) (103 :R 114) (104 :R 114) (125 :S 250))
((11 :S 200) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (160 :S 276) (161 :S 278) (162 :S 280))
((11 :S 200) (37 :S 40) (44 :S 48) (52 :S 60) (60 :S 75) (62 :S 83) (67 :S 94) (69 :S 102) (99 :S 214) (115 :S 201) (128 :S 228) (131 :S 234) (133 :S 236) (134 :S 237) (135 :S 238) (136 :S 239) (137 :S 240) (138 :S 241) (147 :S 256) (148 :S 257) (149 :S 258) (150 :S 259) (151 :S 260) (152 :S 261) (156 :S 329) (162 :S 280)))

#342(
((3 . 1)(4 . 2)(10 . 8))
()
()
()
()
((8 . 6)(12 . 10))
()
()
()
()
((13 . 11))
((14 . 12)(28 . 321)(29 . 27)(30 . 28))
()
()
()
()
()
()
((19 . 338)(20 . 17)(22 . 19)(23 . 314)(24 . 21))
()
()
()
((10 . 24)(26 . 23))
()
()
()
()
()
()
((31 . 30)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
()
()
()
((33 . 34)(34 . 337))
()
()
()
()
((36 . 39)(43 . 217)(120 . 216))
()
()
((39 . 42))
()
((41 . 44))
((42 . 45))
()
((43 . 47))
()
()
((46 . 50))
()
((48 . 52))
()
((50 . 54))
()
((41 . 56))
((51 . 57)(72 . 309))
()
((43 . 59))
()
()
((31 . 62)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
((54 . 63))
((55 . 64))
()
((39 . 66))
()
((41 . 68))
((56 . 69))
((57 . 70))
((58 . 71))
((59 . 72))
()
((43 . 74))
()
((61 . 76))
()
((39 . 78))
()
((41 . 80))
()
((43 . 82))
()
()
()
((65 . 86))
()
()
((39 . 89))
()
((41 . 91))
()
((43 . 93))
()
()
((39 . 96))
()
((41 . 98))
((68 . 99)(88 . 335)(89 . 153)(90 . 154))
()
((43 . 101))
()
()
()
((65 . 105))
()
()
((39 . 108))
()
((41 . 110))
()
((43 . 112))
()
()
()
()
()
()
()
()
()
()
()
()
()
((76 . 126)(77 . 334))
()
()
()
()
()
()
()
()
()
()
((81 . 137)(83 . 141)(122 . 221)(123 . 222)(124 . 223))
()
()
()
()
()
((84 . 143))
()
()
()
()
()
()
()
()
()
()
()
()
((93 . 156)(95 . 297)(96 . 161)(97 . 162))
()
()
((65 . 159))
()
()
()
()
()
()
((65 . 166))
()
((93 . 168)(95 . 297)(96 . 161)(97 . 162))
()
()
()
((41 . 172))
()
()
((100 . 175))
((101 . 176))
((102 . 177))
()
((41 . 179))
()
((31 . 181)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
()
((31 . 183)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
()
()
()
()
((65 . 188))
()
()
()
()
()
()
()
()
()
()
()
()
()
((116 . 202))
()
()
()
()
((117 . 207))
()
((31 . 209)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
()
()
()
()
()
()
()
()
()
((83 . 333)(121 . 219)(122 . 221)(123 . 222)(124 . 223))
()
()
()
()
()
((124 . 225))
()
()
()
()
((33 . 230)(34 . 337))
()
()
((130 . 233))
()
()
()
()
()
()
()
()
()
()
()
((140 . 245)(141 . 332)(142 . 327))
()
()
()
((142 . 249))
()
((142 . 328)(145 . 251)(153 . 331))
()
()
((146 . 254)(154 . 330))
()
()
()
()
()
()
()
()
((142 . 263))
()
()
((142 . 266))
()
()
()
()
((34 . 288)(157 . 271))
()
()
((31 . 274)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
()
()
((31 . 277)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
()
((31 . 279)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
()
((163 . 281))
((164 . 282))
()
()
()
()
()
()
((34 . 288)(157 . 289))
()
((146 . 291)(154 . 330))
()
((142 . 328)(145 . 293)(153 . 331))
()
((140 . 295)(141 . 332)(142 . 327))
()
()
((93 . 298)(95 . 297)(96 . 161)(97 . 162))
()
()
((171 . 301))
()
((171 . 303))
()
((76 . 305)(77 . 334))
()
()
((65 . 308))
()
((51 . 310)(72 . 309))
()
()
((19 . 338)(20 . 17)(24 . 313))
()
((19 . 338)(20 . 17)(22 . 315)(23 . 314)(24 . 21))
()
((19 . 317)(20 . 17))
((172 . 318))
()
((172 . 320))
()
((14 . 322)(28 . 321)(29 . 27)(30 . 28))
()
((16 . 13)(19 . 319)(20 . 17))
()
((92 . 155))
()
()
()
()
()
()
()
((83 . 333)(121 . 296)(122 . 221)(123 . 222)(124 . 223))
()
((68 . 306)(88 . 335)(89 . 153)(90 . 154))
()
((33 . 311)(34 . 337))
()
()
((31 . 275)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340))
((31 . 37)(105 . 190)(106 . 191)(107 . 192)(108 . 193)(109 . 194)(110 . 195)(111 . 196)(112 . 197)(113 . 198)(114 . 199)(129 . 232)(144 . 339)(159 . 340)))
0 

2 

#88((MODULE-DEFINITION . #S(ZEBU::ZB-RULE :-NAME MODULE-DEFINITION :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-IDENTIFIER "DEFINITIONS" "::=" "BEGIN" MODULE-BODY "END") :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE MODULE-DEFINITION :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL IDENTIFIER :-VALUE MODULE-IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL BODY :-VALUE MODULE-BODY))) :-BUILD-FN MODULE-DEFINITION107))))
(MODULE-IDENTIFIER . #S(ZEBU::ZB-RULE :-NAME MODULE-IDENTIFIER :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-REFERENCE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(MODULE-REFERENCE . #S(ZEBU::ZB-RULE :-NAME MODULE-REFERENCE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (TYPE-REFERENCE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(MODULE-BODY . #S(ZEBU::ZB-RULE :-NAME MODULE-BODY :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (EXPORTS IMPORTS ASSIGNMENT*) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE MODULE-BODY :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL ASSIGNMENT-LIST :-VALUE ASSIGNMENT*) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL EXPORTS :-VALUE EXPORTS) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL IMPORTS :-VALUE IMPORTS))) :-BUILD-FN MODULE-BODY106) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(EXPORTS . #S(ZEBU::ZB-RULE :-NAME EXPORTS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("EXPORTS" SYMBOL*\,1$ ";") :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE EXPORTS :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL LIST :-VALUE SYMBOL*\,1$))) :-BUILD-FN EXPORTS104) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("EXPORTS" "ALL" ";") :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE EXPORTS :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL ALL-EXPORTS :-VALUE T))) :-BUILD-FN EXPORTS105) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(SYMBOL . #S(ZEBU::ZB-RULE :-NAME SYMBOL :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (REFERENCE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(IMPORTS . #S(ZEBU::ZB-RULE :-NAME IMPORTS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("IMPORTS" SYMBOLS-FROM-MODULE* ";") :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE IMPORTS :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALID :-VALUE T) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL LIST :-VALUE SYMBOLS-FROM-MODULE*))) :-BUILD-FN IMPORTS103) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(SYMBOLS-FROM-MODULE . #S(ZEBU::ZB-RULE :-NAME SYMBOLS-FROM-MODULE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (SYMBOL+\,1$ "FROM" GLOBAL-MODULE-REFERENCE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE SYMBOLS-FROM-MODULE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL SYMBOLS :-VALUE SYMBOL+\,1$) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL GLOBAL-MODULE-REFERENCE :-VALUE GLOBAL-MODULE-REFERENCE))) :-BUILD-FN SYMBOLS-FROM-MODULE102))))
(GLOBAL-MODULE-REFERENCE . #S(ZEBU::ZB-RULE :-NAME GLOBAL-MODULE-REFERENCE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-REFERENCE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(REFERENCE . #S(ZEBU::ZB-RULE :-NAME REFERENCE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (TYPE-REFERENCE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(ASSIGNMENT . #S(ZEBU::ZB-RULE :-NAME ASSIGNMENT :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (TYPE-ASSIGNMENT) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :TYPE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE TYPE-ASSIGNMENT))) :-BUILD-FN ASSIGNMENT100) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (VALUE-ASSIGNMENT) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :VALUE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE VALUE-ASSIGNMENT))) :-BUILD-FN ASSIGNMENT101))))
(TYPE-ASSIGNMENT . #S(ZEBU::ZB-RULE :-NAME TYPE-ASSIGNMENT :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (TYPE-REFERENCE "::=" TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (TYPE-REFERENCE "MACRO" "::=" "BEGIN" GARBAGE+ "END") :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(GARBAGE . #S(ZEBU::ZB-RULE :-NAME GARBAGE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (ANYTHING) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(VALUE-ASSIGNMENT . #S(ZEBU::ZB-RULE :-NAME VALUE-ASSIGNMENT :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER TYPE "::=" VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE TYPE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE VALUE))) :-BUILD-FN VALUE-ASSIGNMENT92) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "OBJECT-IDENTITY" "STATUS" STATUS "DESCRIPTION" DESCRIPTION OBJECT-IDENTITY-REFERENCE "::=" OBJECT-IDENTIFIER-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :OBJECT-IDENTITY) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJECT-IDENTIFIER-VALUE))) :-BUILD-FN VALUE-ASSIGNMENT93) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "MODULE-IDENTITY" "LAST-UPDATED" LAST-UPDATED "ORGANIZATION" ORGANIZATION "CONTACT-INFO" CONTACT-INFO "DESCRIPTION" DESCRIPTION MODULE-REVISION* "::=" OBJECT-IDENTIFIER-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :MODULE-IDENTITY) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJECT-IDENTIFIER-VALUE))) :-BUILD-FN VALUE-ASSIGNMENT94) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "OBJECT-TYPE" "SYNTAX" TYPE OBJECT-TYPE-UNITS OBJECT-TYPE-ACCESS "STATUS" STATUS "DESCRIPTION" DESCRIPTION OBJECT-TYPE-INDEX OBJECT-TYPE-AUGMENTS OBJECT-TYPE-REFERENCE OBJECT-TYPE-DEFVAL "::=" OBJECT-IDENTIFIER-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :OBJECT-TYPE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJECT-IDENTIFIER-VALUE))) :-BUILD-FN VALUE-ASSIGNMENT95) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "NOTIFICATION-TYPE" NOTIFICATION-TYPE-OBJECTS "STATUS" STATUS "DESCRIPTION" DESCRIPTION "::=" OBJECT-IDENTIFIER-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :NOTIFICATION-TYPE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJECT-IDENTIFIER-VALUE))) :-BUILD-FN VALUE-ASSIGNMENT96) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "NOTIFICATION-GROUP" "NOTIFICATIONS" "{" IDENTIFIER+\,1$ "}" "STATUS" STATUS "DESCRIPTION" DESCRIPTION "::=" OBJECT-IDENTIFIER-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :NOTIFICATION-GROUP) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJECT-IDENTIFIER-VALUE))) :-BUILD-FN VALUE-ASSIGNMENT97) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "MODULE-COMPLIANCE" "STATUS" STATUS "DESCRIPTION" DESCRIPTION MODULE-COMPLIANCE-BODY+ "::=" OBJECT-IDENTIFIER-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :MODULE-COMPLIANCE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJECT-IDENTIFIER-VALUE))) :-BUILD-FN VALUE-ASSIGNMENT98) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "OBJECT-GROUP" "OBJECTS" "{" IDENTIFIER+\,1$ "}" "STATUS" STATUS "DESCRIPTION" DESCRIPTION "::=" OBJECT-IDENTIFIER-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE VALUE-ASSIGNMENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL TYPE :-VALUE :OBJECT-GROUP) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJECT-IDENTIFIER-VALUE))) :-BUILD-FN VALUE-ASSIGNMENT99))))
(STATUS . #S(ZEBU::ZB-RULE :-NAME STATUS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(DESCRIPTION . #S(ZEBU::ZB-RULE :-NAME DESCRIPTION :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(LAST-UPDATED . #S(ZEBU::ZB-RULE :-NAME LAST-UPDATED :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(ORGANIZATION . #S(ZEBU::ZB-RULE :-NAME ORGANIZATION :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(CONTACT-INFO . #S(ZEBU::ZB-RULE :-NAME CONTACT-INFO :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(MODULE-REVISION . #S(ZEBU::ZB-RULE :-NAME MODULE-REVISION :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("REVISION" STRING "DESCRIPTION" STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-IDENTITY-REFERENCE . #S(ZEBU::ZB-RULE :-NAME OBJECT-IDENTITY-REFERENCE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("REFERENCE" STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-TYPE-INDEX . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-INDEX :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("INDEX" "{" OBJECT-TYPE-INDEX-VALUE+\,1$ "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-TYPE-INDEX-VALUE . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-INDEX-VALUE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("IMPLIED" IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(OBJECT-TYPE-AUGMENTS . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-AUGMENTS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("AUGMENTS" "{" IDENTIFIER "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-TYPE-DEFVAL . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-DEFVAL :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("DEFVAL" "{" OBJECT-TYPE-DEFVAL-VALUE "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-TYPE-DEFVAL-VALUE . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-DEFVAL-VALUE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (HSTRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (OBJ-ID-COMPONENT) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("{" IDENTIFIER*\,1$ "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-TYPE-UNITS . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-UNITS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("UNITS" STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-TYPE-REFERENCE . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-REFERENCE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("REFERENCE" STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-TYPE-ACCESS . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-ACCESS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("MAX-ACCESS" IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("ACCESS" IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-BODY . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-BODY :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-COMPLIANCE-LOCAL) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-COMPLIANCE-OTHER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(MODULE-COMPLIANCE-LOCAL . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-LOCAL :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("MODULE" MODULE-COMPLIANCE-MANDATORY MODULE-COMPLIANCE-ITEM*) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-MANDATORY . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-MANDATORY :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("MANDATORY-GROUPS" "{" IDENTIFIER+\,1$ "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-ITEM . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-ITEM :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-COMPLIANCE-GROUP) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-COMPLIANCE-OBJECT) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(MODULE-COMPLIANCE-OTHER . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-OTHER :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("MODULE" TYPE-REFERENCE "MANDATORY-GROUPS" "{" IDENTIFIER+\,1$ "}" MODULE-COMPLIANCE-ITEM*) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-GROUP . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-GROUP :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("GROUP" IDENTIFIER "DESCRIPTION" DESCRIPTION) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-OBJECT . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-OBJECT :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("OBJECT" IDENTIFIER MODULE-COMPLIANCE-OBJECT-SYNTAX MODULE-COMPLIANCE-OBJECT-WRITE-SYNTAX MODULE-COMPLIANCE-OBJECT-ACCESS "DESCRIPTION" DESCRIPTION) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-OBJECT-SYNTAX . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-OBJECT-SYNTAX :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("SYNTAX" TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-OBJECT-WRITE-SYNTAX . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-OBJECT-WRITE-SYNTAX :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("WRITE-SYNTAX" TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(MODULE-COMPLIANCE-OBJECT-ACCESS . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-OBJECT-ACCESS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("MIN-ACCESS" IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(NOTIFICATION-TYPE-OBJECTS . #S(ZEBU::ZB-RULE :-NAME NOTIFICATION-TYPE-OBJECTS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("OBJECTS" "{" IDENTIFIER+\,1$ "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(TYPE . #S(ZEBU::ZB-RULE :-NAME TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (BUILTIN-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (NAMED-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(BUILTIN-TYPE . #S(ZEBU::ZB-RULE :-NAME BUILTIN-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (OBJECT-IDENTIFIER-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (CHOICE-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (STRING-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (INTEGER-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (SEQUENCE-OF-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (SEQUENCE-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (TEXTUAL-CONVENTION-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (TAGGED-TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(NAMED-TYPE . #S(ZEBU::ZB-RULE :-NAME NAMED-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (TYPE-REFERENCE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(TEXTUAL-CONVENTION-TYPE . #S(ZEBU::ZB-RULE :-NAME TEXTUAL-CONVENTION-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("TEXTUAL-CONVENTION" TEXTUAL-CONVENTION-DISPLAY-HINT "STATUS" IDENTIFIER "DESCRIPTION" STRING TEXTUAL-CONVENTION-REFERENCE "SYNTAX" TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(TEXTUAL-CONVENTION-DISPLAY-HINT . #S(ZEBU::ZB-RULE :-NAME TEXTUAL-CONVENTION-DISPLAY-HINT :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("DISPLAY-HINT" STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(TEXTUAL-CONVENTION-REFERENCE . #S(ZEBU::ZB-RULE :-NAME TEXTUAL-CONVENTION-REFERENCE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("REFERENCE" STRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(OBJECT-IDENTIFIER-TYPE . #S(ZEBU::ZB-RULE :-NAME OBJECT-IDENTIFIER-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("OBJECT" "IDENTIFIER") :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(VALUE . #S(ZEBU::ZB-RULE :-NAME VALUE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (BUILTIN-VALUE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(BUILTIN-VALUE . #S(ZEBU::ZB-RULE :-NAME BUILTIN-VALUE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (OBJECT-IDENTIFIER-VALUE) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(OBJECT-IDENTIFIER-VALUE . #S(ZEBU::ZB-RULE :-NAME OBJECT-IDENTIFIER-VALUE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("{" OBJ-ID-COMPONENT+ "}") :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE OBJECT-IDENTIFIER-VALUE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE OBJ-ID-COMPONENT+))) :-BUILD-FN OBJECT-IDENTIFIER-VALUE91))))
(OBJ-ID-COMPONENT . #S(ZEBU::ZB-RULE :-NAME OBJ-ID-COMPONENT :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (NAME-AND-NUMBER-FORM) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (NAME-FORM) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (NUMBER-FORM) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(NAME-AND-NUMBER-FORM . #S(ZEBU::ZB-RULE :-NAME NAME-AND-NUMBER-FORM :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "(" NUMBER-FORM ")") :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE OBJ-ID-COMPONENT :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL NAME :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL VALUE :-VALUE NUMBER-FORM))) :-BUILD-FN NAME-AND-NUMBER-FORM90))))
(NAME-FORM . #S(ZEBU::ZB-RULE :-NAME NAME-FORM :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(NUMBER-FORM . #S(ZEBU::ZB-RULE :-NAME NUMBER-FORM :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (NUMBER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(CHOICE-TYPE . #S(ZEBU::ZB-RULE :-NAME CHOICE-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("CHOICE" "{" GARBAGE+ "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(STRING-TYPE . #S(ZEBU::ZB-RULE :-NAME STRING-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (STRING-TYPE-NAME STRING-OPTIONS) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(STRING-TYPE-NAME . #S(ZEBU::ZB-RULE :-NAME STRING-TYPE-NAME :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("OCTET" "STRING") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("DisplayString") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("PhysAddress") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("SnmpAdminString") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("DateAndTime") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("InternationalDisplayString") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("Opaque") :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(STRING-OPTIONS . #S(ZEBU::ZB-RULE :-NAME STRING-OPTIONS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("(" "SIZE" "(" NUMBERS+\|1$ ")" ")") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(NUMBERS . #S(ZEBU::ZB-RULE :-NAME NUMBERS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (COMMON-NUMBER ".." COMMON-NUMBER) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (COMMON-NUMBER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(INTEGER-TYPE . #S(ZEBU::ZB-RULE :-NAME INTEGER-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (INTEGER-TYPE-NAME "(" SPLITED-NUMBERS+\|1$ ")") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (INTEGER-TYPE-NAME "{" NAMED-NUMBER+\,1$ "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (INTEGER-TYPE-NAME) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(INTEGER-TYPE-NAME . #S(ZEBU::ZB-RULE :-NAME INTEGER-TYPE-NAME :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("INTEGER") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("Integer32") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("Unsigned32") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("RowStatus") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("SnmpSecurityModel") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("BITS") :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(SPLITED-NUMBERS . #S(ZEBU::ZB-RULE :-NAME SPLITED-NUMBERS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (COMMON-NUMBER) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (COMMON-NUMBER ".." COMMON-NUMBER) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(NAMED-NUMBER . #S(ZEBU::ZB-RULE :-NAME NAMED-NUMBER :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "(" COMMON-NUMBER ")") :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(COMMON-NUMBER . #S(ZEBU::ZB-RULE :-NAME COMMON-NUMBER :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (SIGNED-NUMBER) :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (HSTRING) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(SEQUENCE-TYPE . #S(ZEBU::ZB-RULE :-NAME SEQUENCE-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("SEQUENCE" "{" GARBAGE* "}") :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(SEQUENCE-OF-TYPE . #S(ZEBU::ZB-RULE :-NAME SEQUENCE-OF-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("SEQUENCE" "OF" TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(TAGGED-TYPE . #S(ZEBU::ZB-RULE :-NAME TAGGED-TYPE :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (TAG TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (TAG "IMPLICIT" TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (TAG "EXPLICIT" TYPE) :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(TAG . #S(ZEBU::ZB-RULE :-NAME TAG :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("[" CLASS CLASS-NUMBER "]") :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(CLASS-NUMBER . #S(ZEBU::ZB-RULE :-NAME CLASS-NUMBER :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (SIGNED-NUMBER) :-SEMANTICS NIL :-BUILD-FN IDENTITY))))
(CLASS . #S(ZEBU::ZB-RULE :-NAME CLASS :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX ("UNIVERSAL") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("APPLICATION") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("PRIVATE") :-SEMANTICS NIL :-BUILD-FN IDENTITY) #S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*))))
(GARBAGE* . #S(ZEBU::ZB-RULE :-NAME GARBAGE* :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (GARBAGE GARBAGE*) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE GARBAGE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE GARBAGE*))) :-BUILD-FN GARBAGE*89))))
(NAMED-NUMBER+\,1$ . #S(ZEBU::ZB-RULE :-NAME NAMED-NUMBER+\,1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (NAMED-NUMBER) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE NAMED-NUMBER))) :-BUILD-FN NAMED-NUMBER+\,1$87) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (NAMED-NUMBER "," NAMED-NUMBER+\,1$) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE NAMED-NUMBER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE NAMED-NUMBER+\,1$))) :-BUILD-FN NAMED-NUMBER+\,1$88))))
(SPLITED-NUMBERS+\|1$ . #S(ZEBU::ZB-RULE :-NAME SPLITED-NUMBERS+\|1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (SPLITED-NUMBERS) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE SPLITED-NUMBERS))) :-BUILD-FN SPLITED-NUMBERS+\|1$85) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (SPLITED-NUMBERS "|" SPLITED-NUMBERS+\|1$) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE SPLITED-NUMBERS) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE SPLITED-NUMBERS+\|1$))) :-BUILD-FN SPLITED-NUMBERS+\|1$86))))
(NUMBERS+\|1$ . #S(ZEBU::ZB-RULE :-NAME NUMBERS+\|1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (NUMBERS) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE NUMBERS))) :-BUILD-FN NUMBERS+\|1$83) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (NUMBERS "|" NUMBERS+\|1$) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE NUMBERS) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE NUMBERS+\|1$))) :-BUILD-FN NUMBERS+\|1$84))))
(OBJ-ID-COMPONENT+ . #S(ZEBU::ZB-RULE :-NAME OBJ-ID-COMPONENT+ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (OBJ-ID-COMPONENT) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE OBJ-ID-COMPONENT))) :-BUILD-FN OBJ-ID-COMPONENT+81) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (OBJ-ID-COMPONENT OBJ-ID-COMPONENT+) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE OBJ-ID-COMPONENT) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE OBJ-ID-COMPONENT+))) :-BUILD-FN OBJ-ID-COMPONENT+82))))
(MODULE-COMPLIANCE-ITEM* . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-ITEM* :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-COMPLIANCE-ITEM MODULE-COMPLIANCE-ITEM*) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE MODULE-COMPLIANCE-ITEM) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE MODULE-COMPLIANCE-ITEM*))) :-BUILD-FN MODULE-COMPLIANCE-ITEM*80))))
(|Rest-IDENTIFIER*,1$| . #S(ZEBU::ZB-RULE :-NAME |Rest-IDENTIFIER*,1$| :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("," IDENTIFIER |Rest-IDENTIFIER*,1$|) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE |Rest-IDENTIFIER*,1$|))) :-BUILD-FN |Rest-IDENTIFIER*,1$79|))))
(IDENTIFIER*\,1$ . #S(ZEBU::ZB-RULE :-NAME IDENTIFIER*\,1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER |Rest-IDENTIFIER*,1$|) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE |Rest-IDENTIFIER*,1$|))) :-BUILD-FN IDENTIFIER*\,1$78))))
(OBJECT-TYPE-INDEX-VALUE+\,1$ . #S(ZEBU::ZB-RULE :-NAME OBJECT-TYPE-INDEX-VALUE+\,1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (OBJECT-TYPE-INDEX-VALUE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE OBJECT-TYPE-INDEX-VALUE))) :-BUILD-FN OBJECT-TYPE-INDEX-VALUE+\,1$76) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (OBJECT-TYPE-INDEX-VALUE "," OBJECT-TYPE-INDEX-VALUE+\,1$) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE OBJECT-TYPE-INDEX-VALUE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE OBJECT-TYPE-INDEX-VALUE+\,1$))) :-BUILD-FN OBJECT-TYPE-INDEX-VALUE+\,1$77))))
(MODULE-COMPLIANCE-BODY+ . #S(ZEBU::ZB-RULE :-NAME MODULE-COMPLIANCE-BODY+ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-COMPLIANCE-BODY) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE MODULE-COMPLIANCE-BODY))) :-BUILD-FN MODULE-COMPLIANCE-BODY+74) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-COMPLIANCE-BODY MODULE-COMPLIANCE-BODY+) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE MODULE-COMPLIANCE-BODY) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE MODULE-COMPLIANCE-BODY+))) :-BUILD-FN MODULE-COMPLIANCE-BODY+75))))
(IDENTIFIER+\,1$ . #S(ZEBU::ZB-RULE :-NAME IDENTIFIER+\,1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE IDENTIFIER))) :-BUILD-FN IDENTIFIER+\,1$72) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (IDENTIFIER "," IDENTIFIER+\,1$) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE IDENTIFIER) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE IDENTIFIER+\,1$))) :-BUILD-FN IDENTIFIER+\,1$73))))
(MODULE-REVISION* . #S(ZEBU::ZB-RULE :-NAME MODULE-REVISION* :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (MODULE-REVISION MODULE-REVISION*) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE MODULE-REVISION) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE MODULE-REVISION*))) :-BUILD-FN MODULE-REVISION*71))))
(GARBAGE+ . #S(ZEBU::ZB-RULE :-NAME GARBAGE+ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (GARBAGE) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE GARBAGE))) :-BUILD-FN GARBAGE+69) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (GARBAGE GARBAGE+) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE GARBAGE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE GARBAGE+))) :-BUILD-FN GARBAGE+70))))
(SYMBOL+\,1$ . #S(ZEBU::ZB-RULE :-NAME SYMBOL+\,1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX (SYMBOL) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE SYMBOL))) :-BUILD-FN SYMBOL+\,1$67) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (SYMBOL "," SYMBOL+\,1$) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE SYMBOL) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE SYMBOL+\,1$))) :-BUILD-FN SYMBOL+\,1$68))))
(SYMBOLS-FROM-MODULE* . #S(ZEBU::ZB-RULE :-NAME SYMBOLS-FROM-MODULE* :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (SYMBOLS-FROM-MODULE SYMBOLS-FROM-MODULE*) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE SYMBOLS-FROM-MODULE) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE SYMBOLS-FROM-MODULE*))) :-BUILD-FN SYMBOLS-FROM-MODULE*66))))
(|Rest-SYMBOL*,1$| . #S(ZEBU::ZB-RULE :-NAME |Rest-SYMBOL*,1$| :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX ("," SYMBOL |Rest-SYMBOL*,1$|) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE SYMBOL) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE |Rest-SYMBOL*,1$|))) :-BUILD-FN |Rest-SYMBOL*,1$65|))))
(SYMBOL*\,1$ . #S(ZEBU::ZB-RULE :-NAME SYMBOL*\,1$ :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (SYMBOL |Rest-SYMBOL*,1$|) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE SYMBOL) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE |Rest-SYMBOL*,1$|))) :-BUILD-FN SYMBOL*\,1$64))))
(ASSIGNMENT* . #S(ZEBU::ZB-RULE :-NAME ASSIGNMENT* :-PRODUCTIONS (#S(ZEBU::PRODUCTION-RHS :-SYNTAX NIL :-SEMANTICS NIL :-BUILD-FN IDENTITY*) #S(ZEBU::PRODUCTION-RHS :-SYNTAX (ASSIGNMENT ASSIGNMENT*) :-SEMANTICS #S(ZEBU::FEAT-TERM :-TYPE KB-SEQUENCE :-SLOTS (#S(ZEBU::LABEL-VALUE-PAIR :-LABEL FIRST :-VALUE ASSIGNMENT) #S(ZEBU::LABEL-VALUE-PAIR :-LABEL REST :-VALUE ASSIGNMENT*))) :-BUILD-FN ASSIGNMENT*63))))
)