Hi, Lispers

I never give up making my cl-net-snmp project better and better. Now
there're some roadmap to be published:

[new features will be in next cl-net-snmp 5.x release]

* New function SNMP-OPERATION, this new function can do multiple SNMP
operation (many session and many PDU) at the same time, which can take
performance burst when retrieving status from hundreds of remote
agents together. To implement this feature, the USOCKET-UDP package
need to be changed to support "Congestion Avoidance and Control" which
existed in TCP stack. Because if we send thousands of UDP packets
suddenly, bad things maybe happen to your LAN or switch device.

* VACM (View-based Access Control Model) in SNMP-SERVER, another big
step towards a well-implemented lisp-based SNMP Server. But I still
cannot support SNMPv3 on this time (version 5.x) because it's quite
low-priority behind other part.

* Better condition support on both client side and server side. On
client side, any SNMP operation should return correct condition
according to the ERROR-STATUS in SNMP PDUs; On server side, wrong-
formated SNMP client packets will not bring any CONDITION to SNMP-
SERVER's code. Instead, any client error will record into SNMP's own
MIB variables.

[new features will be in cl-net-snmp 6.0 release]

* Real ASN.1 compiler support: All type definition in SNMP MIB files
will be well compiled into CLOS class-definition. This will let SNMP-
GET to know some return value of type OCTET STRING is actually a
"Physical Address" object and coerce them into correct type. This can
be a very hard job since no one ever considered before how to map the
full ASN.1 into Common Lisp! (but since CORBA is already successful
mapped into Common Lisp, ASN.1 will be too, I think.)

* Map ASN.1 Module into Common Lisp packages. In cl-net-snmp 3.x and
5.x, all ASN.1 variables are defined in ASN.1 package, this will cause
some issues, which the biggest one is that "there's no way to define
two MIB node which have the same name". ASN.1 specification doesn't
forbidden the existence of OID with same name but different position
in MIB tree. To support this, I must define more packages to hold
object id symbols. Again, this is very hard since many ASN.1
definition files is not write full correct: they always use symbol
which haven't imported correctly.

[news in usocket-udp and lispworks-udp]

The USOCKET author has started to request for my SVN commit access.
After the response of Common-Lisp.net Administrator, I'll commit all
my UDP changes into one branch of USOCKET project and work with Erik
(the USOCKET auther) to make it better. Maybe in the 0.5.x release
(still far away), USOCKET will have full UDP support and can be used
directly by my SNMP package without standalone USOCKET-UDP.

LispWorks-UDP package has been considered by some people whom need UDP
networking on LispWorks. I'm trying to bring more features into this
package: ICMP, UDP Multicast and UNIX Domain Socket. Once done,
LispWOrks-UDP will have the 4.0 release, and these new features will
be tried to merge into USOCKET project and make other CL platforms
share the same API.

[papers on ILC 2009]

I'll try to publish a paper on ILC 2009 about my work on ASN.1 and
SNMP, and this will be the first document on how to use these packages
(without read source code first). Time is limited, I'm not sure if I
can finish it before deadline (but will do my best).

----------------------

Finally, thanks to many Lispers who ever use my packages or give
suggestions.

Regards,

Chun Tian (binghe)
NetEase.com, Inc.
