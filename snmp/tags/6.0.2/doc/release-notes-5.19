Common Lisp SNMP (cl-net-snmp) 5.19

New packages in this release:

  * snmp 5.19 (snmp-server 3.11)
  * asn.1 4.14
  * usocket-udp 2.4

[Support Platforms]

  * CMUCL (version >= 2008-08 snapshot)
  * SBCL
  * Clozure CL
  * LispWorks (plus ASN.1 compiler and GUI tools)
  * Allegro CL
  * Scieneer CL (need a udp patch)

[Download]

  * http://sourceforge.net/project/showfiles.php?group_id=209101
  * (ASDF-INSTALL:INSTALL :SNMP)

[SVN Repository]

    https://cl-net-snmp.svn.sourceforge.net/svnroot/cl-net-snmp

[ChangeLog]

* SNMP 5.17 ~ 5.19:

5.17: SNMP-GET on single OBJECT-ID instance works now, missing method
      added.

5.18: New SMI design, SNMP special variables such as NoSuchObject and
      EndOfMibView changed from keyword symbol to instances of SMI
      class.

5.19: [SNMPv3] GENERATE-KU use the non-stream version to support more
      CL include SCL which doesn't support Gray Streams.

* SNMP-SERVER 3.6 ~ 3.11:

3.6:  bugfix: Cancel use of read-macros on some MIB variables such as
      "lispMachineInstance" and "lispMachineVersion", which should be
      calculated at runtime but compile-time.

3.7:  (server-side fix after SNMP 5.18)

3.8:  Fix for SCL, SNMP thread will exit automatically when (QUIT)
      called, or SCL process will hang forever. This need USOCKET-UDP
      newer than 2.4

3.9:  [MIB] new SCL-MIB added, it's been defined at:
      iso.org.dod.internet.private. enterprises.lisp.common-lisp.scl
      (.1.3.6.1.4.1.31609.1.10)

3.10: REGISTER-VARIABLE enhancements and export this symbol to user.

3.11: (PROCESS-OBJECT-ID (OBJECT-ID (EQL :GET))) Fix, formerly
      variables such as "laLoad.1" cannot be processed correctly to
      reply a (SMI :NO-SUCH-OBJECT)

* ASN.1 4.13 ~ 4.14:

4.13: Fix BER decode on SEQUENCE contains unknown ASN.1 data (RAW),
      export ASN.1-TYPE and GENERAL-TYPE which used by SNMP 5.18

4.14: Add a fallback BER-EQUAL to fix SNMP-WALK bug after SNMP 5.18,
      export VALUE-OF which used to access slot of GENERAL-TYPE.

* USOCKET-UDP 2.4:

2.4:  Fix for SCL, SOCKET-SERVER thread will exit automatically after
      (QUIT) be called in SCL. We start to look at
      THREAD:*QUITTING-LISP* in server loop.
